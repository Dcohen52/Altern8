1. Data types and data structures: Most programming languages provide built-in data types such as:
    * integers.
    * floats.
    * strings.

    In addition, data structures like lists, dictionaries, sets, and arrays are also commonly included in a standard library.
2. File I/O: A standard library often provides functions to:
    * read and write files from the file system.
    * opening and closing files.
    * reading and writing text or binary data.
    * navigating directories.
3. Networking: For languages that are used for network programming, standard libraries often include functions for making network connections, sending and receiving data over various protocols like TCP or UDP, and handling sockets.
4. Regular expressions: Regular expressions are a powerful tool for string manipulation, pattern matching, and data validation. A standard library often provides functions for working with regular expressions.
5. Date and time handling: Many applications require handling of dates and times, so a standard library often provides functions for working with dates, times, and time zones.
6. Concurrency and multithreading: For languages that support concurrency and multithreading, standard libraries often provide functions for creating and managing threads, locks, and synchronization mechanisms.
7. Math functions: A standard library may provide functions for common mathematical operations, such as:
    * trigonometric functions.
    * logarithms.
    * rounding.
8. Utility functions: Many programming languages have a set of utility functions that provide common functionality that is often used by developers, such as:
    * string manipulation functions.
    * formatting and parsing functions.
    * error handling functions.